$mq-xsmall:  320px;
$mq-small:  567px;
$mq-medium:  960px;
$mq-large: 1280px;
$mq-xlarge: 1920px;

$mq-landscape-ratio-width: 4 !default;
$mq-landscape-ratio-height: 3 !default;
$mq-landscape-min-ratio: toString($mq-landscape-ratio-width)/toString($mq-landscape-ratio-height);
$mq-landscape-max-ratio: "1000/1" !default;

$mq-portrait-ratio-width: 4 !default;
$mq-portrait-ratio-height: 5 !default;
$mq-portrait-min-ratio: toString($mq-portrait-ratio-width)/toString($mq-portrait-ratio-height);
$mq-portrait-max-ratio: "1/1000" !default;

$mq-portrait-ratio: $mq-portrait-ratio-width / $mq-portrait-ratio-height !default;
$mq-landscape-ratio: $mq-landscape-ratio-width / $mq-landscape-ratio-height !default;


@function mq-from-width($px) {
  @return "(min-width: #{px-to-em($px)})";
};
@function mq-to-width($px) {
  @return "(max-width: #{px-to-em($px - 1px)})";
};
@function mq-from-to-width($from, $to) {
  @return "#{mq-from-width($from)} and #{mq-to-width($to)}";
};

@function mq-from-height($px) {
  @return "(min-height: #{px-to-em($px)})";
};
@function mq-to-height($px) {
  @return "(max-height: #{px-to-em($px - 1px)})";
};
@function mq-from-to-height($from, $to) {
  @return "#{mq-from-height($from)} and #{mq-to-height($to)}";
};

$mq-breakpoints: (
  landscape: "(min-aspect-ratio: #{$mq-landscape-min-ratio})",
  square: "(min-aspect-ratio:#{$mq-portrait-min-ratio}) and (max-aspect-ratio:#{$mq-landscape-min-ratio})",
  portrait: "(max-aspect-ratio:#{$mq-portrait-min-ratio})",

  //landscape: "(orientation: landscape)",
  '>landscape': "(max-aspect-ratio:#{$mq-landscape-min-ratio})",
  //'!landscape': "not (min-aspect-ratio: #{$mq-landscape-min-ratio})",

  '>square':  "(max-aspect-ratio:#{$mq-portrait-min-ratio})",
  '>=square': "(max-aspect-ratio:#{$mq-landscape-min-ratio})",
  '<square': "(min-aspect-ratio:#{$mq-landscape-min-ratio})",
  '<=square': "(min-aspect-ratio:#{$mq-portrait-min-ratio})",
  //'!square': "not screen and (min-aspect-ratio:#{$mq-portrait-min-ratio}) and (not max-aspect-ratio:#{$mq-landscape-min-ratio})",

  //portrait: "(orientation: portrait)",
  '<portrait': "(min-aspect-ratio:#{$mq-portrait-min-ratio})"
  //'!portrait': "not screen and (max-aspect-ratio:#{$mq-portrait-min-ratio})",

  // 'retina': "(min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)",
  // '!retina': "not screen and (min-device-pixel-ratio: 2), not screen and (min-resolution: 192dpi), not screen and (min-resolution: 2dppx)"

  // ,xsmall-width: mq-to-width($mq-xsmall)
  // ,small-width: mq-from-to-width($mq-xsmall, $mq-small)
  // ,medium-width: mq-from-to-width($mq-small, $mq-medium)
  // ,large-width: mq-from-to-width($mq-medium, $mq-large)
  // ,xlarge-width: mq-from-to-width($mq-large, $mq-xlarge)
  // ,xxlarge-width: mq-from-width($mq-xlarge)

  // ,xsmall-height: mq-to-height($mq-xsmall)
  // ,small-height: mq-from-to-height($mq-xsmall, $mq-small)
  // ,medium-height: mq-from-to-height($mq-small, $mq-medium)
  // ,large-height: mq-from-to-height($mq-medium, $mq-large)
  // ,xlarge-height: mq-from-to-height($mq-large, $mq-xlarge)
  // ,xxlarge-height: mq-from-height($mq-xlarge)

) !default;